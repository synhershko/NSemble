@using System.Linq
@using NSemble.Modules.Blog.Helpers
@using NSemble.Modules.Blog.Models
@using NSemble.Core.Models
@using NSemble.Core.Extensions
@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@{
    Layout = "_BlogLayout.cshtml";
    BlogPost post = Model.BlogPost;
}

<article>
    <h3>@Model.BlogPost.Title</h3>
    <small>Posted @HtmlExtensions.Html5DateTimeTag(post.PublishedAt)</small>

    <hr />

    @NSemble.Core.Extensions.DynamicContentHelpers.CompiledContent(Model.BlogPost)
</article>
<p><small>Tagged @UrlHelpers.TagLinks((string)ViewBag.AreaRoutePrefix, post.Tags)</small></p>

<hr/>
<section>
    <a name="comments"></a>
    <p><strong>Comments</strong></p>
    @if (Model.Comments != null)
    {
        foreach (PostComments.Comment comment in Model.Comments.Comments)
        {
            <div class="row-fluid">
                <div class="span1">
                    @NSemble.Modules.Blog.Helpers.BlogPostHelpers.Gravatar(comment, 48)
                </div>
                
                <div class="span11">
                    <small>Posted by @comment.Author on @comment.CreatedAt.Html5DateTimeTag()</small>
                    @NSemble.Core.Extensions.DynamicContentHelpers.CompiledStringContent(comment.Content, DynamicContentType.Markdown, false)
                    
                    <br/>
                </div>
            </div>

            if (comment.Replies.Any())
            {
                <ul class="comment-replies">
                    @foreach (var r in comment.Replies)
                    {
                        <li class="row-fluid">
                            <div class="span1 comment-replies-spacer"></div>
                            <div class="span1 comment-replies-gravatar">
                                @NSemble.Modules.Blog.Helpers.BlogPostHelpers.Gravatar(r, 48)
                            </div>

                            <div class="span10">
                                <small>Posted by @r.Author on @r.CreatedAt.Html5DateTimeTag()</small>
                                @NSemble.Core.Extensions.DynamicContentHelpers.CompiledStringContent(r.Content, DynamicContentType.Markdown, false)
                            </div>
                        </li>
                    }
                </ul>
            }

            <br/>
        }
        
        <hr/>
    }
        
    @{
        var postUrl = UrlHelpers.ToUrl(post, (string) ViewBag.AreaRoutePrefix);
        var commentInput = new NSemble.Modules.Blog.Models.PostComments.CommentInput();
    }
    <form method="post" action="@postUrl/new-comment">
        <fieldset>
            <legend>Add a new comment</legend>

            <div>Name</div>
            <div>
                <input type="text" name="Author" value="@commentInput.Author" />
            </div>
         
            <div>E-mail</div>
            <div>
                <input type="text" name="Email" value="@commentInput.Email" />
            </div>
         
            <div>Website (optional)</div>
            <div>
                <input type="text" name="Website" value="@commentInput.Website" />
            </div>

            <div>
                Your comment
            </div>
            <div>
                <textarea name="Body" rows="20" style="width: 500px">@commentInput.Body</textarea>
            </div>
	     
            <div>
                2 * 4 = ?
            </div>
            <div>
                <input type="text" name="HumanVerification" value="" />
            </div>

            <p>
                <input type="submit" value="Post comment" />
            </p>
        </fieldset>
    </form>
</section>